body, 
body * {
   padding: 0;
   margin: 0;
}

body {
   --offset: 2rem;
   display: flex;
   flex-flow: column;
   min-height: calc(100vh - var(--offset) * 2);
   padding: var(--offset);
   align-items: center;
   justify-content: center;
   gap: 2rem;
}

body * {
   font-family: Roboto, system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

body .field:has(:required)>label::after {
   content: "*";
   color: red;
   padding: 0 0.25rem;
}

body button {
   cursor: pointer;
}

body button:disabled {
   cursor: initial;
}

body>main {
   display: flex;
   flex-flow: column;
   align-items: center;
   justify-content: center;
   gap: 2rem;
}

body>main>.message {
   font-size: 0.75rem;
   height: 1rem;
}

body>main>.message.warning {
   color: red;
}

body>main>form {
   display: flex;
   flex-flow: column;
   gap: 1rem;
}

body>main>form .field {
   display: flex;
   flex-flow: column;
   gap: 0.5rem;
}

body>main>form input,
body>main>form button {
   padding: 0.5rem;
}

body>main>form label {
   font-size: 0.75rem;
}

body>main>form>.players {
   display: flex;
   flex-flow: column;
   gap: 1rem;
}

body>main>form>.players>fieldset {
   display: flex;
   gap: 1rem;
   padding: 1rem;
}

body>main>form>.players>fieldset>.field>input[name$=symbol] {
   width: 2rem;
   text-align: center;
}

body>main>form>.player-add-remove {
   display: flex;
   gap: 1rem;
}

body>main>form>.player-add-remove>button {
   flex: 1;
}

body>main>form>.settings {
   display: flex;
   gap: 1rem;
}

body>main>form>.settings>.field {
   flex: 1;
   min-width: 0;
}

body>main>.gameboard {
   display: grid;
   grid-template: repeat(var(--board-size), 1fr) / repeat(var(--board-size), 1fr);
   background: black;
   gap: 0.125rem;
}

body>main>.gameboard>button {
   font-size: 2rem;
   width: 4rem;
   aspect-ratio: 1;
   border: none;
   background: white;
}

body>main>.gameboard>button:focus-visible::after,
body>main>.gameboard>button:hover::after {
   content: attr(data-next-symbol);
   color: gray;
}

body>main>.gameboard>button:focus-visible {
   outline: dashed white;
}

body>main>.gameboard>button:hover {
   opacity: 95%;
}

body>main>.gameboard>button:disabled {
   color: initial;
   opacity: initial;
}

body>main>.gameboard>button.winning {
   color: red;
}

body>main>.gameboard>button:disabled::after {
   content: "";
}

body>main>button.reset {
   padding: 0.5rem;
}